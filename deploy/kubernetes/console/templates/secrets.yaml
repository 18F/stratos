---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: "{{ .Release.Name }}-secret"
  labels:
    app.kubernetes.io/name: "stratos"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "console-secret"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
data:
  client: {{ default "" .Values.uaa.consoleClient | b64enc | quote }}
  clientSecret: {{  default "" .Values.uaa.consoleClientSecret | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-db-secret"
  labels:
    app.kubernetes.io/name: "stratos"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "console-db-secret"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
type: Opaque
data:
  {{- if .Values.mariadb.rootPassword }}
  rootPassword: {{ .Values.mariadb.rootPassword | b64enc | quote }}
  {{- else }}
  rootPassword: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  {{- if .Values.mariadb.userPassword }}
  password: {{ .Values.mariadb.userPassword | b64enc | quote }}
  {{- else }}
  password: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  user: {{ .Values.mariadb.user | b64enc | quote }}
  database: {{ .Values.mariadb.database | b64enc | quote }}
  {{- if .Values.console.sessionStoreSecret }}
  sessionStoreSecret: {{ .Values.console.sessionStoreSecret | b64enc | quote }}
  {{- else }}
  sessionStoreSecret: {{ randAlphaNum 64 | b64enc | quote }}
  {{- end }}
  localAdminPasword: {{ default "" .Values.console.localAdminPassword | b64enc | quote }}

{{- if and .Values.kube.registry.username .Values.kube.registry.password }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/dockercfg
metadata:
  name: {{ .Values.dockerRegistrySecret }}
  labels:
    app.kubernetes.io/name: "stratos"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "console-dockerreg-secret"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
data:
  .dockercfg: {{ template "imagePullSecret" . }}
{{- end}}
{{- if not .Release.IsUpgrade }}
---
# TODO - Only do this if not an upgrade AND the user did not specify a secret to use for the certs
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: "{{ .Release.Name }}-cert-secret"
  labels:
    app.kubernetes.io/name: "stratos"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "console-cert-secret"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
data:
{{ ( include "console.generateCertificate" . ) | indent 2 }}
{{- end -}}
