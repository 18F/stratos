---
resource_types:
- name: docker-image
  type: docker-image
  privileged: true
  source:
    repository: ((docker-image-resource))
    tag: ((docker-image-resource-tag))
    
resources:
- name: stratos
  type: git
  source:
    uri: ((stratos-uri))
    branch: ((stratos-branch))
    private_key: ((github-private-key))
# Docker Images
- name: jetstream-image
  type: docker-image
  source:
    username: ((docker-username))
    password: ((docker-password))
    repository: ((docker-org))/stratos-jetstream
- name: postflight-image
  type: docker-image
  source:
    username: ((docker-username))
    password: ((docker-password))
    repository: ((docker-org))/stratos-postflight
- name: mariadb-image
  type: docker-image
  source:
    username: ((docker-username))
    password: ((docker-password))
    repository: ((docker-org))/stratos-mariadb
- name: ui-image
  type: docker-image
  source:
    username: ((docker-username))
    password: ((docker-password))
    repository: ((docker-org))/stratos-mariadb

# Artifacts
- name: image-tag
  type: s3
  source:
    bucket: concourse-stratos-ui
    endpoint: ((minio-server-endpoint))
    regexp: temp-artifacts/v(.*)-alpha-tag
    access_key_id: ((minio-access-key))
    secret_access_key: ((minio-secret-access-key))
    region_name: eu-central-1
- name: helm-chart-tarball
  type: s3
  source:
    bucket: concourse-stratos-ui
    endpoint: {{minio-server-endpoint}}
    regexp: temp-artifacts/console-v2-(?P<version>.*).tgz
    access_key_id: {{minio-access-key}}
    secret_access_key: {{minio-secret-access-key}}
    region_name: eu-central-1
jobs:
- name: generate-tag-files
  plan:
  - get: stratos
    trigger: true
  - do:
    - task: generate-tag
      file: stratos/deploy/ci/tasks/dev-releases/generate-tag-files.yml
      params:
        DOCKER_USERNAME: ((docker-username))
        DOCKER_PASSWORD: ((docker-password))
        BASE_IMAGE: opensuse
    - put: image-tag
      params:
        file: image-tag/v2-alpha-tag
        acl: public-read
- name: build-images
  plan:
  - get: stratos
    passed: [generate-tag-files]
    trigger: true
  - get: image-tag
    passed: [generate-tag-files]
  - aggregate:
    - put: jetstream-image
      params:
        dockerfile: stratos/deploy/Dockerfile.bk
        build: stratos/
        target_name:  prod-build
        tag: image-tag/v2-alpha-tag
    - put: postflight-image
      params:
        dockerfile: stratos/deploy/Dockerfile.bk
        build: stratos/
        target_name:  postflight-job
        tag: image-tag/v2-alpha-tag
    - put: mariadb-image
      params:
        dockerfile: stratos/deploy/db/Dockerfile.mariadb
        build: stratos/deploy/db
        tag: image-tag/v2-alpha-tag
    - put: ui-image
      params:
        dockerfile: stratos/deploy/Dockerfile.ui
        build: stratos/
        target_name: prod-build
        tag: image-tag/v2-alpha-tag
- name: create-chart
  plan:
  - get: stratos
    passed: [build-images]
    trigger: true
  - get: image-tag
    passed: [build-images]
  - do:
    - task: build
      privileged: true
      timeout: 30m
      file: stratos/deploy/ci/tasks/release/create-chart.yml
      params:
        GIT_USER: ((concourse-user))
        GIT_EMAIL: ((concourse-email))
        GITHUB_ORG: ((github-organization))
        GITHUB_REPO: ((github-repository))
        GIT_PRIVATE_KEY: ((github-private-key))
    - put: helm-chart-tarball
      params:
       file: helm-chart/*.tgz
       acl: public-read   
- name: update-github
  plan:
  - get: stratos
    passed: [create-chart]
    trigger: true
  - get: helm-chart-tarball
    passed: [create-chart]
  - do:
    - task: build
      privileged: true
      timeout: 30m
      file: stratos/deploy/ci/tasks/release/update-gh-release.yml
      params:
        GITHUB_TOKEN: ((github-access-token))
        CHANDLER_GITHUB_API_TOKEN: ((github-access-token))
        GITHUB_USER: ((github-organization))
        GITHUB_REPO: ((github-repository))