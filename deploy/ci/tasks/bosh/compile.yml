---
platform: linux
inputs:
- name: stratos-ui
image_resource:
  type: docker-image
  source:
   # Image based on bosh/cli2 with git and go added
   repository:  irfanhabib/concourse-bosh
   tag: "latest"

run:
  path: sh
  args:
    - -xc
    - |
      # Register BOSH Director
      cat << EOF >> ca_cert
      $BOSH_CA_CERT
      EOF
      bosh2 alias-env vbox -e $BOSH_DIRECTOR_IP --ca-cert ca_cert
      export BOSH_CLIENT=admin
      export BOSH_CLIENT_SECRET=$BOSH_ADMIN_PASSWORD
      export BOSH_NON_INTERACTIVE=true

      # BOSH create release
      pushd stratos-ui/deploy/stratos-ui-release

      pushd src
      ln -s ../../../ stratos-ui
      popd

      bosh2 create-release
      # Delete any release
      bosh2 -e vbox upload-release -d stratos-ui

      # Upload built release
      bosh2 -e vbox upload-release -d stratos-ui
      # Deploy
      bosh2 -e vbox -d stratos-ui deploy bosh-lite/deployment.yml
      # List Deployment
      FRONTEND_IP=$(bosh2 -e vbox -d stratos-ui instances | sed -n 's/.*frontend.*\(10\.*\)/\1/p')
      popd
      # Run E2E tests

      pushd stratos-ui
      npm install
  
      cat << EOF > ../build/secrets.json
      {
        "cloudFoundry": {
          "url": "${CF_LOCATION}",
          "admin": {
            "username": "${CF_ADMIN_USER}",
            "password": "${CF_ADMIN_PASSWORD}"
          },
          "user": {
            "username": "${CF_E2E_USER}",
            "password": "${CF_E2E_USER_PASSWORD}"
          }
       },
        "console": {
          "host": "${FRONTEND_IP}"
          "port": "443"
          "admin": {
            "username": "${CONSOLE_ADMIN_USER}",
            "password": "${CONSOLE_ADMIN_PASSWORD}"
          },
          "user": {
            "username": "${CONSOLE_USER_USER}",
            "password": "${CONSOLE_USER_PASSWORD}"
          }
        },
        "uaa": {
          "url": ${UAA_URL}",
          "clientId": "${UAA_CLIENT_ID}",
          "adminUsername": "${UAA_ADMIN_USERNAME}",
          "adminPassword": "${UAA_ADMIN_PASSWORD}"
        },
        "runSetupModeTests": true,
        "githubPat": "${GITHUB_TOKEN}"
      }
      EOF

      npm run e2e-on-target
      E2E_EXIT_CODE=$?

      # Tear down deployment
      bosh2 -e vbox -d stratos-ui delete-deployment
      
      # Delete the release
      bosh2 delete-release stratos-ui -e vbox

      exit E2E_EXIT_CODE
