---
platform: linux
inputs:
- name: stratos-ui
- name: dev-certs-output
outputs:
- name: helm-build
image_resource:
  type: docker-image
  source:
   repository:  ci-registry.ngrok.io:80/concourse-dcind
   tag: "latest"
   insecure_registries: [ "ci-registry.ngrok.io:80" ]

run:
  path: sh
  args:
    - -exc
    - |
      if [ ! -z "${STAGING_REPOSITORY}" ]; then
      cat << EOF >> /etc/docker/daemon.json
      {
      "insecure-registries":["${STAGING_REPOSITORY}"]
      }
      EOF
      fi

      source /docker-lib.sh
      start_docker

      # Login to Docker to push images
      if [ ! -z "${STAGING_REPOSITORY}" ]; then
      docker login -u ${STAGING_REPOSITORY_USERNAME} -p ${STAGING_REPOSITORY_PASSWORD} ${STAGING_REPOSITORY};
      else
      docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD};
      fi
      ROOT_DIR=${PWD}
      # Move dev-certs
      mv ${ROOT_DIR}/dev-certs-output/dev-certs stratos-ui/dev-certs
      cd ${ROOT_DIR}/stratos-ui/deploy/kubernetes


      # Build images
      if [ ! -z "${STAGING_REPOSITORY}" ]; then
      ./build.sh -T -c -b ${BASE_IMAGE} -r ${STAGING_REPOSITORY}
      else
      ./build.sh -T -c -b ${BASE_IMAGE}
      fi
      GIT_TAG="$(git describe $(git rev-list --tags --max-count=1))-$(git rev-parse --short HEAD)"
      cp console/values.yaml ${ROOT_DIR}/helm-build/values.yaml-${GIT_TAG}
      cp console/Chart.yaml ${ROOT_DIR}/helm-build/Chart.yaml-${GIT_TAG}
