---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    skiff-role-name: uaa
  name: uaa
spec:
  replicas: 1
  selector:
    matchLabels:
      skiff-role-name: uaa
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        skiff-role-name: uaa
      name: uaa
    spec:
      containers:
      - env:
        - name: DOMAIN
          value: {{.Values.domain}}
        - name: INTERNAL_CA_CERT
          value: |-
{{.Files.Get "ssl/internalCaCert" | indent 12}}
        - name: JWT_SIGNING_PEM
          value: |-
{{.Files.Get "ssl/jwtSigningPem" | indent 12}}
        - name: MONIT_PASSWORD
          value: monit_password
        - name: SAML_SERVICEPROVIDER_CERT
          value: |-
{{.Files.Get "ssl/samlServiceProviderCert" | indent 12}}
        - name: SAML_SERVICEPROVIDER_KEY
          value: |-
{{.Files.Get "ssl/samlServiceProviderKey" | indent 12}}
        - name: UAADB_PASSWORD
          value: {{.Values.uaaDbPassword}}
        - name: UAA_ADMIN_CLIENT_SECRET
          value: {{.Values.uaaAdminClientSecret}}
        - name: UAA_SERVER_CERT
          value: |-
{{.Files.Get "ssl/uaaServerCert" | indent 12}}
        - name: UAA_SERVER_KEY
          value: |-
{{.Files.Get "ssl/uaaServerKey" | indent 12}}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.paas-ui:5000/uaa-uaa:39b70dd1d06e0a51a8ed3c544cbe6c5d1522ea80
        livenessProbe:
          initialDelaySeconds: 600
          tcpSocket:
            port: 2289
        name: uaa
        ports:
        - containerPort: 8080
          name: uaa
          protocol: TCP
        - containerPort: 8443
          name: uaa-ssl
          protocol: TCP
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Host
              value: uaa
            - name: Accept
              value: application/json
            path: /info
            port: 8443
            scheme: HTTPS
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
status: {}