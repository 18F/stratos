/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .factory('cloud-foundry.api.ServiceInstancesService', ServiceInstancesServiceFactory);

  function ServiceInstancesServiceFactory() {
    /* eslint-disable camelcase */
    function ServiceInstancesService($http) {

      this.BindingServiceInstanceToRouteExperimental = function (service_instance_guid, route_guid, value, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances/" + service_instance_guid + "/routes/" + route_guid + "";
        config.method = 'PUT';
        config.data = value;
        $http(config);
      };

      this.CreateServiceInstance = function (value, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances";
        config.method = 'POST';
        config.data = value;
        $http(config);
      };

      this.DeleteServiceInstance = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances/" + guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.ListAllRoutesForServiceInstance = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances/" + guid + "/routes";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllServiceBindingsForServiceInstance = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances/" + guid + "/service_bindings";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllServiceInstances = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances";
        config.method = 'GET';
        $http(config);
      };

      this.MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimental = function (service_plan_guid, value, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_plans/" + service_plan_guid + "/service_instances";
        config.method = 'PUT';
        config.data = value;
        $http(config);
      };

      this.RetrieveServiceInstance = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances/" + guid + "";
        config.method = 'GET';
        $http(config);
      };

      this.RetrievingPermissionsOnServiceInstance = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances/" + guid + "/permissions";
        config.method = 'GET';
        $http(config);
      };

      this.UnbindingServiceInstanceFromRouteExperimental = function (service_instance_guid, route_guid, value, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances/" + service_instance_guid + "/routes/" + route_guid + "";
        config.method = 'DELETE';
        config.data = value;
        $http(config);
      };

      this.UpdateServiceInstance = function (guid, value, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/service_instances/" + guid + "";
        config.method = 'PUT';
        config.data = value;
        $http(config);
      };

    }

    return ServiceInstancesService;
    /* eslint-enable camelcase */
  }

})();
