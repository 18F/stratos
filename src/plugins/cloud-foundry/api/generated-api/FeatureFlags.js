/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .factory('cloud-foundry.api.FeatureFlagsService', FeatureFlagsServiceFactory);

  function FeatureFlagsServiceFactory() {
    /* eslint-disable camelcase */
    function FeatureFlagsService($http) {

      this.GetAllFeatureFlags = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags";
        config.method = 'GET';
        $http(config);
      };

      this.GetAppBitsUploadFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/app_bits_upload";
        config.method = 'GET';
        $http(config);
      };

      this.GetAppScalingFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/app_scaling";
        config.method = 'GET';
        $http(config);
      };

      this.GetDiegoDockerFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/diego_docker";
        config.method = 'GET';
        $http(config);
      };

      this.GetPrivateDomainCreationFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/private_domain_creation";
        config.method = 'GET';
        $http(config);
      };

      this.GetRouteCreationFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/route_creation";
        config.method = 'GET';
        $http(config);
      };

      this.GetServiceInstanceCreationFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/service_instance_creation";
        config.method = 'GET';
        $http(config);
      };

      this.GetSetUserRolesFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/set_roles_by_username";
        config.method = 'GET';
        $http(config);
      };

      this.GetUnsetUserRolesFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/unset_roles_by_username";
        config.method = 'GET';
        $http(config);
      };

      this.GetUserOrgCreationFeatureFlag = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/user_org_creation";
        config.method = 'GET';
        $http(config);
      };

      this.SetFeatureFlag = function (name, value, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/config/feature_flags/" + name + "";
        config.method = 'PUT';
        config.data = value;
        $http(config);
      };

    }

    return FeatureFlagsService;
    /* eslint-enable camelcase */
  }

})();
