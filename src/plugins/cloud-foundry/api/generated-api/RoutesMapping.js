/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .run(registerApi);

  registerApi.$inject = [
    '$http',
    'app.api.apiManager'
  ];

  function registerApi($http, apiManager) {
    apiManager.register('cloud-foundry.api.RoutesMapping', new RoutesMappingApi($http));
  }

  function RoutesMappingApi($http) {
    this.$http = $http;
  }

  /* eslint-disable camelcase */
  angular.extend(RoutesMappingApi.prototype, {

   /*
    * Delete a Particular Route Mapping
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/routes_mapping/delete_a_particular_route_mapping.html
    */
    DeleteRouteMapping: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v2/route_mappings/" + guid + "';
      config.method = 'DELETE';
      return this.$http(config);
    },

   /*
    * List all Route Mappings
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/routes_mapping/list_all_route_mappings.html
    */
    ListAllRouteMappings: function (params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v2/route_mappings';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * Mapping an App and a Route
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/routes_mapping/mapping_an_app_and_a_route.html
    */
    MappingAppAndRoute: function (value, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v2/route_mappings';
      config.method = 'POST';
      config.data = value;
      return this.$http(config);
    },

   /*
    * Retrieve a Particular Route Mapping
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/routes_mapping/retrieve_a_particular_route_mapping.html
    */
    RetrieveRouteMapping: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v2/route_mappings/" + guid + "';
      config.method = 'GET';
      return this.$http(config);
    }

  });
  /* eslint-enable camelcase */

})();
