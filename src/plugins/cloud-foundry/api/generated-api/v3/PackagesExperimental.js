/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .run(registerApi);

  registerApi.$inject = [
    '$http',
    'app.api.apiManager'
  ];

  function registerApi($http, apiManager) {
    apiManager.register('cloud-foundry.api.PackagesExperimental', new PackagesExperimentalApi($http));
  }

  function PackagesExperimentalApi($http) {
    this.$http = $http;
  }

  /* eslint-disable camelcase */
  angular.extend(PackagesExperimentalApi.prototype, {

   /*
    * Copy a Package
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/packages__experimental_/copy_a_package.html
    */
    CopyPackage: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = "/api/cf/v3/apps/" + guid + "/packages";
      config.method = 'POST';
      return this.$http(config);
    },

   /*
    * Create a Package
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/packages__experimental_/create_a_package.html
    */
    CreatePackage: function (guid, value, params) {
      var config = {};
      config.params = params;
      config.url = "/api/cf/v3/apps/" + guid + "/packages";
      config.method = 'POST';
      config.data = value;
      return this.$http(config);
    },

   /*
    * Delete a Package
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/packages__experimental_/delete_a_package.html
    */
    DeletePackage: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = "/api/cf/v3/packages/" + guid + "";
      config.method = 'DELETE';
      return this.$http(config);
    },

   /*
    * Get a Package
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/packages__experimental_/get_a_package.html
    */
    GetPackage: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = "/api/cf/v3/packages/" + guid + "";
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * List all Packages
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/packages__experimental_/list_all_packages.html
    */
    ListAllPackages: function (params) {
      var config = {};
      config.params = params;
      config.url = "/api/cf/v3/packages";
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * Stage a package
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/packages__experimental_/stage_a_package.html
    */
    StagePackage: function (guid, value, params) {
      var config = {};
      config.params = params;
      config.url = "/api/cf/v3/packages/" + guid + "/droplets";
      config.method = 'POST';
      config.data = value;
      return this.$http(config);
    }

  });
  /* eslint-enable camelcase */

})();
