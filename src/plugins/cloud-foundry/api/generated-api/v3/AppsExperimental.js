/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .run(registerApi);

  registerApi.$inject = [
    '$http',
    'app.api.apiManager'
  ];

  function registerApi($http, apiManager) {
    apiManager.register('cloud-foundry.api.AppsExperimental', new AppsExperimentalApi($http));
  }

  function AppsExperimentalApi($http) {
    this.$http = $http;
  }

  /* eslint-disable camelcase */
  angular.extend(AppsExperimentalApi.prototype, {

   /*
    * Assigning a droplet as an App's current droplet
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/assigning_a_droplet_as_an_app's_current_droplet.html
    */
    AssignDropletAsAppsCurrentDroplet: function (guid, value, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/current_droplet';
      config.method = 'PUT';
      config.data = value;
      return this.$http(config);
    },

   /*
    * Create a docker app
    * Creates an app in v3 of the Cloud Controller API.
    * Apps must have a valid space guid for creation, which is namespaced under {"relationships": {"space": "your-space-guid"} }.
    * See the example below for more information.
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/create_a_docker_app.html
    */
    CreateDockerApp: function (value, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps';
      config.method = 'POST';
      config.data = value;
      return this.$http(config);
    },

   /*
    * Create an App
    * Creates an app in v3 of the Cloud Controller API.
    * Apps must have a valid space guid for creation, which is namespaced under {"relationships": {"space": "your-space-guid"} }.
    * See the example below for more information.
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/create_an_app.html
    */
    CreateApp: function (value, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps';
      config.method = 'POST';
      config.data = value;
      return this.$http(config);
    },

   /*
    * Delete an App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/delete_an_app.html
    */
    DeleteApp: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "';
      config.method = 'DELETE';
      return this.$http(config);
    },

   /*
    * Filters Droplets by states, app_guids
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/filters_droplets_by_states,_app_guids.html
    */
    FiltersDropletsByStatesAppGuids: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/droplets';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * Get a Process from an App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/get_a_process_from_an_app.html
    */
    GetProcessFromApp: function (guid, type, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/processes/" + type + "';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * Get an App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/get_an_app.html
    */
    GetApp: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * Get Detailed Stats for an App's Process
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/get_detailed_stats_for_an_app's_process.html
    */
    GetDetailedStatsForAppsProcess: function (guid, type, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/processes/" + type + "/stats';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * Get Detailed Stats for an App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/get_detailed_stats_for_an_app.html
    */
    GetDetailedStatsForApp: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/stats';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * Get the env for an App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/get_the_env_for_an_app.html
    */
    GetEnvForApp: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/env';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * List all Apps
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/list_all_apps.html
    */
    ListAllApps: function (params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * List associated droplets
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/list_associated_droplets.html
    */
    ListAssociatedDroplets: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/droplets';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * List associated packages
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/list_associated_packages.html
    */
    ListAssociatedPackages: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/packages';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * List associated processes
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/list_associated_processes.html
    */
    ListAssociatedProcesses: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/processes';
      config.method = 'GET';
      return this.$http(config);
    },

   /*
    * Scaling a Process from its App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/scaling_a_process_from_its_app.html
    */
    ScalingProcessFromItsApp: function (guid, type, value, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/processes/" + type + "/scale';
      config.method = 'PUT';
      config.data = value;
      return this.$http(config);
    },

   /*
    * Starting an App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/starting_an_app.html
    */
    StartingApp: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/start';
      config.method = 'PUT';
      return this.$http(config);
    },

   /*
    * Stopping an App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/stopping_an_app.html
    */
    StoppingApp: function (guid, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/stop';
      config.method = 'PUT';
      return this.$http(config);
    },

   /*
    * Terminating a Process instance from its App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/terminating_a_process_instance_from_its_app.html
    */
    TerminatingProcessInstanceFromItsApp: function (guid, type, index, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "/processes/" + type + "/instances/" + index + "';
      config.method = 'DELETE';
      return this.$http(config);
    },

   /*
    * Updating an App
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/apps__experimental_/updating_an_app.html
    */
    UpdateApp: function (guid, value, params) {
      var config = {};
      config.params = params;
      config.url = '/api/cf/v3/apps/" + guid + "';
      config.method = 'PATCH';
      config.data = value;
      return this.$http(config);
    }

  });
  /* eslint-enable camelcase */

})();
