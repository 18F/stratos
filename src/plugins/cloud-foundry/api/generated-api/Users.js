/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .factory('cloud-foundry.api.UsersService', UsersServiceFactory);

  function UsersServiceFactory() {
    /* eslint-disable camelcase */
    function UsersService($http) {

      this.AssociateAuditedOrganizationWithUser = function (guid, audited_organization_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/audited_organizations/" + audited_organization_guid + "";
        config.method = 'PUT';
        $http(config);
      };

      this.AssociateAuditedSpaceWithUser = function (guid, audited_space_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/audited_spaces/" + audited_space_guid + "";
        config.method = 'PUT';
        $http(config);
      };

      this.AssociateBillingManagedOrganizationWithUser = function (guid, billing_managed_organization_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/billing_managed_organizations/" + billing_managed_organization_guid + "";
        config.method = 'PUT';
        $http(config);
      };

      this.AssociateManagedOrganizationWithUser = function (guid, managed_organization_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/managed_organizations/" + managed_organization_guid + "";
        config.method = 'PUT';
        $http(config);
      };

      this.AssociateManagedSpaceWithUser = function (guid, managed_space_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/managed_spaces/" + managed_space_guid + "";
        config.method = 'PUT';
        $http(config);
      };

      this.AssociateOrganizationWithUser = function (guid, organization_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/organizations/" + organization_guid + "";
        config.method = 'PUT';
        $http(config);
      };

      this.AssociateSpaceWithUser = function (guid, space_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/spaces/" + space_guid + "";
        config.method = 'PUT';
        $http(config);
      };

      this.CreateUser = function (value, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users";
        config.method = 'POST';
        config.data = value;
        $http(config);
      };

      this.DeleteUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.GetUserSummary = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/summary";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllAuditedOrganizationsForUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/audited_organizations";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllAuditedSpacesForUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/audited_spaces";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllBillingManagedOrganizationsForUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/billing_managed_organizations";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllManagedOrganizationsForUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/managed_organizations";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllManagedSpacesForUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/managed_spaces";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllOrganizationsForUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/organizations";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllSpacesForUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/spaces";
        config.method = 'GET';
        $http(config);
      };

      this.ListAllUsers = function (params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users";
        config.method = 'GET';
        $http(config);
      };

      this.RemoveAuditedOrganizationFromUser = function (guid, audited_organization_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/audited_organizations/" + audited_organization_guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.RemoveAuditedSpaceFromUser = function (guid, audited_space_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/audited_spaces/" + audited_space_guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.RemoveBillingManagedOrganizationFromUser = function (guid, billing_managed_organization_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/billing_managed_organizations/" + billing_managed_organization_guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.RemoveManagedOrganizationFromUser = function (guid, managed_organization_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/managed_organizations/" + managed_organization_guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.RemoveManagedSpaceFromUser = function (guid, managed_space_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/managed_spaces/" + managed_space_guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.RemoveOrganizationFromUser = function (guid, organization_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/organizations/" + organization_guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.RemoveSpaceFromUser = function (guid, space_guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "/spaces/" + space_guid + "";
        config.method = 'DELETE';
        $http(config);
      };

      this.RetrieveUser = function (guid, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "";
        config.method = 'GET';
        $http(config);
      };

      this.UpdateUser = function (guid, value, params) {
        var config = {};
        config.params = params;
        config.url = "/v2/users/" + guid + "";
        config.method = 'PUT';
        config.data = value;
        $http(config);
      };

    }

    return UsersService;
    /* eslint-enable camelcase */
  }

})();
