/* DO NOT EDIT: This code has been generated by the cf-dotnet-sdk-builder */

(function () {
  'use strict';

  angular
    .module('cloud-foundry.api')
    .run(registerApi);

  registerApi.$inject = [
    '$http',
    'app.api.apiManager'
  ];

  function registerApi($http, apiManager) {
    apiManager.register('cloud-foundry.api.EnvironmentVariableGroups', new EnvironmentVariableGroupsApi($http));
  }

  function EnvironmentVariableGroupsApi($http) {
    this.$http = $http;
  }

  /* eslint-disable camelcase */
  angular.extend(EnvironmentVariableGroupsApi.prototype, {

   /*
    * Getting the contents of the running environment variable group
    * returns the set of default environment variables available to running apps
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/environment_variable_groups/getting_the_contents_of_the_running_environment_variable_group.html
    */
    GettingContentsOfRunningEnvironmentVariableGroup: function (params) {
      var config = {};
      config.params = params;
      config.url = "/v2/config/environment_variable_groups/running";
      config.method = 'GET';
      return $http(config);
    },

   /*
    * Getting the contents of the staging environment variable group
    * returns the set of default environment variables available during staging
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/environment_variable_groups/getting_the_contents_of_the_staging_environment_variable_group.html
    */
    GettingContentsOfStagingEnvironmentVariableGroup: function (params) {
      var config = {};
      config.params = params;
      config.url = "/v2/config/environment_variable_groups/staging";
      config.method = 'GET';
      return $http(config);
    },

   /*
    * Updating the contents of the running environment variable group
    * Updates the set of environment variables which will be made available to all running apps
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/environment_variable_groups/updating_the_contents_of_the_running_environment_variable_group.html
    */
    UpdateContentsOfRunningEnvironmentVariableGroup: function (value, params) {
      var config = {};
      config.params = params;
      config.url = "/v2/config/environment_variable_groups/running";
      config.method = 'PUT';
      config.data = value;
      return $http(config);
    },

   /*
    * Updating the contents of the staging environment variable group
    * Updates the set of environment variables which will be made available during staging
    * For detailed information, see online documentation at: http://apidocs.cloudfoundry.org/195/environment_variable_groups/updating_the_contents_of_the_staging_environment_variable_group.html
    */
    UpdateContentsOfStagingEnvironmentVariableGroup: function (value, params) {
      var config = {};
      config.params = params;
      config.url = "/v2/config/environment_variable_groups/staging";
      config.method = 'PUT';
      config.data = value;
      return $http(config);
    }

  });
  /* eslint-enable camelcase */

})();
